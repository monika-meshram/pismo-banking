## MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/pismo-banking
spring.datasource.username=root
spring.datasource.password=Password@123

spring.sql.init.schema-locations=classpath:sql/schema.sql
spring.sql.init.data-locations=classpath:sql/data.sql
spring.sql.init.platform=mysql
spring.sql.init.mode=always
#spring.jpa.hibernate.ddl-auto=update

#spring.jpa.hibernate.ddl-auto=none
#spring.sql.init.schema-locations=sql

#spring.jpa.hibernate.ddl-auto=none

#spring.jpa.generate-ddl=false
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=sql/schema.sql
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-source=metadata

#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql

#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.datasource.initialization-mode=always
#spring.datasource.platform=mysql

#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

# create and drop table, good for testing, production set to none or comment it
#spring.jpa.hibernate.ddl-auto=create-drop

#spring.jpa.hibernate.ddl-auto=none
#spring.sql.init.schema-locations=classpath:/schema.sql

springdoc.swagger-ui.path=/pismo-app-documentation
springdoc.api-docs.path=/pismo-app-api-docs